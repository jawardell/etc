use / to search for somehting in vim

make sure not to do 

i -> name = name


do this: 

i -> name = strdup(name)


this makes a copy of the string att. name 
	and puts it on the heap 


it calls malloc within the function 
and places name on the heap 



the incorrect line puts name on the STACK 
which is a risky thing to do 


there is also a funciton called string copy
	strcpy

string copy assumes that the target has sufficient memory space already 

strcopy takes two args 
	takes the dest 
	takes the src


doesnt call malloc internally 
it assumes that the src has sufficent amount of memory ahead of time 

this will fail (in the islands example or any other dynamic memory management 
	situation) because the size of the attribute might not always be the same
	we can't assume the size of the attribute if the user is entering it 


what is the remedy -- let's call malloc first then call strcpy



 --- if you are just in love with strcpy and don't want to do strdup
--- otherwise, we don't have to do it 


there is a sister fucntion to malloc --- calloc 



calloc you can specify the ammount of data you want 
malloc you dont have to specify the ammount you want, it can do it on its own 


if you use strdup, atuo allocated memory for you 

other wise, if yo uwant to use strcpy, you have to make room on the heap 

	it will fail if you dont' do malloc or calloc before hand 




what is the difference between strcpy and strdup ?? 
	 	this will be a test question .. . . 






now, let's talk about chapter 6 .. . ... 





memory leak  -- an issue that is hard to track down 
and is hard to address 



valgrind 


this is an opensource tool that everyone can download and use 
	on mac and unix


install and config on mac is somewhat a hassle 
sudo apt-get install valgrind.. 
sounds easy enough for good old ubuntie box


google cloud uses main memroy on the server to store program s
when you leave and come back, software that you downloaded might be gone, 

it done'st use a hard disk, it uses the server 



we can download valgrind  on google cloud,
when we come back it might be gone, 
	but its not that hard to get it back .. 
on cloud 




but on mac tho.. 

D:



anyway. 




going to try brew install valgrind 







dont remove the structure itslef when releaseing a node 
we must release its attributes that are stored on the heap FIRST 
then we can finally release the entire struct 







valgrind --lead-check=full executable_name



will execute the program and check for memory leak while running it 





he will run valgrind 
to check for memory leak 



delivering a program that seems to be working 
but has memory leak 
	not a big deal if you will be runnign the program for a short time 
	but if you have to run the program for a long time, memory leak can cause severe problems. . . . 



























we can pass functions as function arguments 
we can have a pointer which is of type pointer 



but we want to talk about something which is called 

	enum 


we talked about structs 
we skipped unions 
we skipped enums 
we skipped bitfields


we are still going to not talk about unions or bitfields.. 



but 



we will be tlaking about enums 


when we assign 0 to a, 

	what is the meaning of zero.. 
	maybe zero means hot 
	and maybe one means warm 
	and maybe two mean cold 
but without that meaning established , we have no ideas what those numbers mean 




to make the code more readable, we can use the enum -- 'thing' -- to establish meaning for numbers 



enum colors{red, blue, green};

	when i say red, i am talking about 0
	when i say blue, i am talking about  1
	when i say green, i am talking about 2




enum colors{red = 12, blue = 14, green = 13};
	when i say 12, i am talking about red
	when i say 14, i am talking about blue
	when i say 13, i am talking about green








passing a function pointer as an argument of a function 


	printf is a classic example of this 


printf("%d", a, .........)


	who knows how many arguments there are.. 
	printf handles them all 
	this is called irratic arguments 



looking for mr right 

	uses two criteria

	but how do we handlge additional criteria??? 


how about we keep the find fucntion as it is, but 
	we pass the search criteria as an argument \
	into the function which finds 
	the for loop  that searches for the criteria



remember, sprintf or sscanf =====> we can specify the source and where it is coming from 



so we can read in the input string and use that as the source 
	we can search the source, the string, for the criteria 
	which will be formatted for t us beforehand.. 

^^ this is referring to the code for finding mr right 





the funciton in example one is pretty inflexible, 

in version two we make a lot of different functions to handle idfferent types of parameters 


"what you need is some way for passing the code for the test to the find() function. 
If you had some way of wrapping up a piece of code and handing that code to the function, 
it would be like passing the find() function a testing machine that it could apply to each piece of data"






woah!! 
function names are already pointers... 
this is a dirty little secret 

function_name -- think about it as a variable 



int(*function_name)(*char);
a pointer of type function with arguments of type char pointer which returns an int

this is the same as 

int function_name(char*);



a pointer pointing to a peice of code 

from now on, think about the function name as a pointer 

match as another pointer is pointing to the same function 

we can have multiple pointers pointing to the same piece of code 


wow, that is powerful
   and cool :) 



two pointers pointting to the same data 
now .. 
two pointers pointing to the same code 







woah!! we have a lot of redundant lines of code!! 

we can wrap up those repeated lines of code into functions!! 

this will make our code easier to maintain, more readable, and just way better tho!! 




yas 






allowing funcionts to be passed as arugments into other functions is the number one feature in 
JavaScript

programming is very hard 
lots of dymanic things happendin 


web development 
front end 
and 
back end


front -- appearence, the browser, take care of it 


	in the old days, we had js as the fundaemntal lang
	supporting all kinds of fundatmenta tools 

but now 

	js penetrates the front end and the back end 
	having js as the core of the front end 
	and the back end 



cool 

it has the name of js 
 but dont think that js is similar to java 
js is functional programming lang 
java is oo

functions can be passed as arguments into other functions



all of a sudden, functions can be passed as function args, ----> this is a big deal




